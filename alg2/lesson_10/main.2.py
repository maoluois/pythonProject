'''

假设你正在爬楼梯，需要n阶你才能到达楼顶。

每次你可以爬1 或 2 个台阶，你有多少种不同的方法可以爬到楼顶呢

动态规划:找f(n) 与 f(n-1) 的关系

递推关系

能用动态，我们不用递归。
1 f(n)怎么来的。一步一步跳上来的

动态规划最重要的就是:递推公式
    f(n) = f(n-1)  一种方式

    f(n) = f(n-2) 第二种方法

    总的 f(n) = f(n-1) + f(n-2)

它意味着爬到第x级台阶的方案数是爬到第x-1级台阶的方案数和爬到第x-2级台阶的方案数的综合

每次可以爬1 或 2 个阶梯
0: 0
f(0) = 1
f(1) = 1
f(2) = 2
'''

def climbStep(n:int) ->int:
    # 每次都要保存俩个值

    p1 = 1
    p2 = 1
    b = 1
    for i in range(2,n+1):# 包含n
        a = p1
        b = p2 + p1

        p2 = a
        p1 = b

    return b